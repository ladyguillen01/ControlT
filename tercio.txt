options compress=yes obs=max;

%let codmes = 202508;
%let DBRICKS_MAX_TEXT = 128;
%let usr = T04809;
%let passw = Rvw$$2051sl;
%let bd = BCPDW3;

libname ods_v ORACLE user=&usr pass="&passw" path=BCPDW3 schema=ods_v;

/* Importar CSV con guessingrows alto */
proc import datafile="/sasdata31/RBM_SEG_DESA_04/T65734/tercio/temp_grado_sos2508.csv"
    out=work.temp_grado_sos01
    dbms=csv
    replace;
    guessingrows=10000;
    getnames=yes;
run;

/* Limpiar y preparar tabla de sostenibilidad */
proc sql;
create table temp_grado_sos as 
select distinct 
    trim(codinternocomputacional) as codinternocomputacional,
    trim(numsolicitudmic) as numsolicitudmic, 
    trim(GRADO_SOSTENIBILIDAD) as GRADO_SOSTENIBILIDAD 
from temp_grado_sos01;
quit;

/* Generar universo de cr√©ditos MiVivienda */
proc sql;
create table MiVivienda_Garantias_0 as
select distinct  
    a.CODCLAVEOPECTA,
    a.codopecta,
    a.CODCLAVECIC,
	a.codproducto,
    b.CODOPECTAGAR,
    c.TIPESTGAR,
    d.CODTIPPRESTAMO,
    d.FECDESEMBOLSOORIGINAL,
	d.FECAPERTURA,
    input(compress(CODSOLICITUDPRESTAMO),10.) as CODSOLICITUDPRESTAMO_n,
    compress(NUMSOLICITUD) as NUMSOLICITUD,
    MTOBIENADQUIRIR,
    case when substr(CODSOLICITUDPRESTAMO,1,2)='CC' then 1 else 0 end as FLG_CC
from ods_v.hm_resumensaldo a
left join ods_v.md_relacionprestamogarantia b
    on a.CODCLAVEOPECTA = b.CODCLAVEOPECTA and b.FLGREGELIMINADO = 'N'
left join ods_v.md_garantia c
    on b.CODOPECTAGAR = c.CODOPECTAGAR and c.FLGREGELIMINADO = 'N'
left join ods_v.md_prestamo d
    on a.CODCLAVEOPECTA = d.CODCLAVEOPECTA
left join ods_v.md_solicitud_mic e
    on input(compress(CODSOLICITUDPRESTAMO),10.) = e.CODSOLICITUD
where a.codmes = &codmes.
  and a.codproducto in ('CPEHMM','CPEHMR','CPEHMV','CPEHTP','CPTM01','CPEHTR','CPEHMP')
  and d.CODTIPPRESTAMO in ('HBIV','HITP','HMIV','HSIV','HVIV','HTIV');
quit;

/* Enriquecer con grado de sostenibilidad */
proc sql;
create table MiVivienda_Garantias_01 as
select a.*, b.GRADO_SOSTENIBILIDAD
from MiVivienda_Garantias_0 a
left join temp_grado_sos b
    on compress(a.NUMSOLICITUD) = compress(b.numsolicitudmic)
    and a.NUMSOLICITUD is not null;
quit;

/* Calcular cobertura adicional */
proc sql;
create table MiVivienda_Garantias_1 as
select distinct
    compress(b.CODINTERNOCOMPUTACIONAL) as CIC,
    substr(b.CODDOC,5,8) as IDC,
    b.TIPDOC as TIPO_IDC,
    substr(compress(b.NBRCLI)||' '||compress(b.APEPATCLI)||' '||compress(b.APEMATCLI),1,40) as NOMBRES,
	CASE when a.codproducto ='CPEHTP' then 
		 case 
			when intck('year', input(FECAPERTURA, anydtdtm.), today()) <= 2 then 0.000
            when intck('year', input(FECAPERTURA, anydtdtm.), today()) > 2 and intck('year', input(FECAPERTURA, anydtdtm.), today()) <= 4 then 0.000
            when intck('year', input(FECAPERTURA, anydtdtm.), today()) > 4 and intck('year', input(FECAPERTURA, anydtdtm.), today()) <= 6 then 0.000
            when intck('year', input(FECAPERTURA, anydtdtm.), today()) > 6 and intck('year', input(FECAPERTURA, anydtdtm.), today()) <= 8 then 0.000
            when intck('year', input(FECAPERTURA, anydtdtm.), today()) > 8 and intck('year', input(FECAPERTURA, anydtdtm.), today()) <= 10 then 0.000
            when intck('year', input(FECAPERTURA, anydtdtm.), today()) > 10 and intck('year', input(FECAPERTURA, anydtdtm.), today()) <= 12 then 0.000
            when intck('year', input(FECAPERTURA, anydtdtm.), today()) > 12 and intck('year', input(FECAPERTURA, anydtdtm.), today()) <= 14 then 0.000
            when intck('year', input(FECAPERTURA, anydtdtm.), today()) > 14 then 0.000
         end

 when a.codproducto ne 'CPEHTP' then 
            case 
                when input(FECDESEMBOLSOORIGINAL, anydtdtm.) <= '15AUG2009'd then 0.3333
                when input(FECDESEMBOLSOORIGINAL, anydtdtm.) between '16SEP2009'd and '14AUG2014'd then 0.3333
                when input(FECDESEMBOLSOORIGINAL, anydtdtm.) between '15AUG2014'd and '31DEC2021'd then 0.3333
                when input(FECDESEMBOLSOORIGINAL, anydtdtm.) >= '01JAN2022'd then 
                    case 
                        when FLG_CC = 1 then 0.3333
                        when MTOBIENADQUIRIR between 61200 and 232200 then 
                            case 
                                when GRADO_SOSTENIBILIDAD = 'GRADO1' then 0.1000
                                when GRADO_SOSTENIBILIDAD = 'GRADO2' then 0.2000
                                when GRADO_SOSTENIBILIDAD = 'GRADO3' then 0.3000
                                else 0.4000
                            end
                        when MTOBIENADQUIRIR > 232200 and MTOBIENADQUIRIR <= 360000 then 
                            case 
                                when GRADO_SOSTENIBILIDAD = 'GRADO1' then 0.0000
                                when GRADO_SOSTENIBILIDAD = 'GRADO2' then 0.1000
                                when GRADO_SOSTENIBILIDAD = 'GRADO3' then 0.2000
                                else 0.3000
                            end
                        else . /* No se registra cobertura adicional */
                    end
                else . /* No se registra cobertura adicional */
            end
    end as COBERTURA_ADICIONAL

from MiVivienda_Garantias_01 a
left join ods_v.md_clienteg94 b
    on a.CODCLAVECIC = b.CODCLAVECIC and b.FLGREGELIMINADO = 'N'
where TIPESTGAR = '10' and calculated COBERTURA_ADICIONAL > 0;
quit;

/* Exportar resultado */
proc export data=MiVivienda_Garantias_1
    outfile="/sasdata01/RBM_SEG_DESA_04/T65734/tercio/tercio2509.csv" 
    dbms=dlm
    replace;
    delimiter=";";
run;
